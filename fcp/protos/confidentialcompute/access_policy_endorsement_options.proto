syntax = "proto3";  // Our OSS build does not support editions.

package fcp.confidentialcompute;

import "fcp/protos/confidentialcompute/key.proto";
import "proto/attestation/reference_value.proto";

option java_package = "com.google.intelligence.fcp.confidentialcompute";
option java_multiple_files = true;

message AccessPolicyEndorsementOptions {
  repeated oak.attestation.v1.EndorsementReferenceValue
      endorsement_reference_values = 1;

  // TODO: b/444302065 - Add TransparencyLogOptions fields for KMS verifying
  // keys, access policy verifying keys, and transparency log options.

  // Requirements for artifacts (e.g. TEE evidence or access policies) to be
  // included in a transparency log. Currently only Rekor is supported.
  //
  // These options only apply when using the Attestation Transparency Service.
  message TransparencyLogOptions {
    // If true, the upload encryption key and access policy must have an
    // endorsement in a transparency log. Setting this to false won't cause
    // SignedPayload messages with a transparency log entry to be rejected.
    //
    // This should be set to true for all production uses that want to guarantee
    // public transparency.
    bool require_transparency_log_entry = 1;

    // The Rekor verifying key(s) used to validate Rekor log entry inclusion
    // proofs. If omitted, Rekor log entries will not be accepted.
    repeated Key rekor_verifying_keys = 2;
  }
}
